############
# A make file for cargo-make, please install it with:
#     cargo install --force cargo-make
############

[config]
# make tasks run at the workspace root
default_to_workspace = false

[tasks.check]
clear = true
dependencies = [
	"check-all",
	"check-wasm",
	"check-all-release",
	"check-wasm-release",
]

[tasks.check-all]
command = "cargo"
args = ["+nightly", "check-all-features"]
install_crate = "cargo-all-features"

[tasks.check-wasm]
clear = true
dependencies = [{ name = "check-wasm", path = "leptos" }]

[tasks.check-all-release]
command = "cargo"
args = ["+nightly", "check-all-features"]
install_crate = "cargo-all-features"

[tasks.check-wasm-release]
clear = true
dependencies = [{ name = "check-wasm-release", path = "leptos" }]

[tasks.check-examples]
clear = true
dependencies = [
	{ name = "check", path = "examples/counter" },
	{ name = "check", path = "examples/counter_isomorphic" },
	{ name = "check", path = "examples/counters" },
	{ name = "check", path = "examples/error_boundary" },
	{ name = "check", path = "examples/errors_axum" },
	{ name = "check", path = "examples/fetch" },
	{ name = "check", path = "examples/hackernews" },
	{ name = "check", path = "examples/hackernews_axum" },
	{ name = "check", path = "examples/js-framework-benchmark" },
	{ name = "check", path = "examples/leptos-tailwind-axum" },
	{ name = "check", path = "examples/login_with_token_csr_only" },
	{ name = "check", path = "examples/parent_child" },
	{ name = "check", path = "examples/router" },
	{ name = "check", path = "examples/session_auth_axum" },
	{ name = "check", path = "examples/slots" },
	{ name = "check", path = "examples/ssr_modes" },
	{ name = "check", path = "examples/ssr_modes_axum" },
	{ name = "check", path = "examples/tailwind" },
	{ name = "check", path = "examples/tailwind_csr_trunk" },
	{ name = "check", path = "examples/timer" },
	{ name = "check", path = "examples/todo_app_sqlite" },
	{ name = "check", path = "examples/todo_app_sqlite_axum" },
	{ name = "check", path = "examples/todo_app_sqlite_viz" },
	{ name = "check", path = "examples/todomvc" },
]

[tasks.check-stable]
clear = true
dependencies = [
	{ name = "check", path = "examples/counter_without_macros" },
	{ name = "check", path = "examples/counters_stable" },
]

[tasks.test]
clear = true
dependencies = [
	"test-all",
	"test-leptos_macro-example",
	"doc-leptos_macro-example",
]

[tasks.test-all]
command = "cargo"
args = ["+nightly", "test-all-features"]
install_crate = "cargo-all-features"

[tasks.test-leptos_macro-example]
description = "Tests the leptos_macro/example to check if macro handles doc comments correctly"
command = "cargo"
args = ["+nightly", "test", "--doc"]
cwd = "leptos_macro/example"
install_crate = false

[tasks.doc-leptos_macro-example]
description = "Docs the leptos_macro/example to check if macro handles doc comments correctly"
command = "cargo"
args = ["+nightly", "doc"]
cwd = "leptos_macro/example"
install_crate = false

[tasks.test-examples]
description = "Run all unit and web tests for examples"
cwd = "examples"
command = "cargo"
args = ["make", "test-unit-and-web"]

[tasks.verify-examples]
description = "Run all quality checks and tests for examples"
env = { CLEAN_AFTER_VERIFY = "true" }
cwd = "examples"
command = "cargo"
args = ["make", "verify-flow"]

[tasks.clean-examples]
description = "Clean all example projects"
cwd = "examples"
command = "cargo"
args = ["make", "clean-all"]

[env]
RUSTFLAGS = ""
LEPTOS_OUTPUT_NAME = "ci" # allows examples to check/build without cargo-leptos

[env.github-actions]
RUSTFLAGS = "-D warnings"
