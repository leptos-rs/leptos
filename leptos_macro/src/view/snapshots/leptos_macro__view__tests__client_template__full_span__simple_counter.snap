---
source: leptos_macro/src/view/tests.rs
expression: result
---
TokenStream [
    Group {
        delimiter: Brace,
        stream: TokenStream [
            Ident {
                sym: thread_local,
            },
            Punct {
                char: '!',
                spacing: Alone,
            },
            Group {
                delimiter: Brace,
                stream: TokenStream [
                    Ident {
                        sym: static,
                    },
                    Ident {
                        sym: __TEMPLATE,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: leptos,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: web_sys,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: HtmlTemplateElement,
                    },
                    Punct {
                        char: '=',
                        spacing: Alone,
                    },
                    Group {
                        delimiter: Brace,
                        stream: TokenStream [
                            Ident {
                                sym: let,
                            },
                            Ident {
                                sym: document,
                            },
                            Punct {
                                char: '=',
                                spacing: Alone,
                            },
                            Punct {
                                char: ':',
                                spacing: Joint,
                            },
                            Punct {
                                char: ':',
                                spacing: Alone,
                            },
                            Ident {
                                sym: leptos,
                            },
                            Punct {
                                char: ':',
                                spacing: Joint,
                            },
                            Punct {
                                char: ':',
                                spacing: Alone,
                            },
                            Ident {
                                sym: document,
                            },
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [],
                            },
                            Punct {
                                char: ';',
                                spacing: Alone,
                            },
                            Ident {
                                sym: let,
                            },
                            Ident {
                                sym: el,
                            },
                            Punct {
                                char: '=',
                                spacing: Alone,
                            },
                            Ident {
                                sym: document,
                            },
                            Punct {
                                char: '.',
                                spacing: Alone,
                            },
                            Ident {
                                sym: create_element,
                            },
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Literal {
                                        lit: "template",
                                        span: bytes(748..758),
                                    },
                                ],
                            },
                            Punct {
                                char: '.',
                                spacing: Alone,
                            },
                            Ident {
                                sym: unwrap,
                            },
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [],
                            },
                            Punct {
                                char: ';',
                                spacing: Alone,
                            },
                            Ident {
                                sym: el,
                            },
                            Punct {
                                char: '.',
                                spacing: Alone,
                            },
                            Ident {
                                sym: set_inner_html,
                            },
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Literal {
                                        lit: "<div><button>Clear</button><button>-1</button><span>Value: <!>!</span><button>+1</button></div>",
                                    },
                                ],
                            },
                            Punct {
                                char: ';',
                                spacing: Alone,
                            },
                            Punct {
                                char: ':',
                                spacing: Joint,
                            },
                            Punct {
                                char: ':',
                                spacing: Alone,
                            },
                            Ident {
                                sym: leptos,
                            },
                            Punct {
                                char: ':',
                                spacing: Joint,
                            },
                            Punct {
                                char: ':',
                                spacing: Alone,
                            },
                            Ident {
                                sym: wasm_bindgen,
                            },
                            Punct {
                                char: ':',
                                spacing: Joint,
                            },
                            Punct {
                                char: ':',
                                spacing: Alone,
                            },
                            Ident {
                                sym: JsCast,
                            },
                            Punct {
                                char: ':',
                                spacing: Joint,
                            },
                            Punct {
                                char: ':',
                                spacing: Alone,
                            },
                            Ident {
                                sym: unchecked_into,
                            },
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Ident {
                                        sym: el,
                                    },
                                ],
                            },
                        ],
                    },
                ],
            },
            Ident {
                sym: let,
            },
            Ident {
                sym: _,
            },
            Punct {
                char: '=',
                spacing: Alone,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos_dom,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: html,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: div,
                span: bytes(11..14),
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Ident {
                sym: let,
            },
            Ident {
                sym: _,
            },
            Punct {
                char: '=',
                spacing: Alone,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos_dom,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: html,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: div,
                span: bytes(327..330),
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Ident {
                sym: let,
            },
            Ident {
                sym: _,
            },
            Punct {
                char: '=',
                spacing: Alone,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos_dom,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: html,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: button,
                span: bytes(29..35),
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Ident {
                sym: let,
            },
            Ident {
                sym: _,
            },
            Punct {
                char: '=',
                spacing: Alone,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos_dom,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: html,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: button,
                span: bytes(76..82),
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Ident {
                sym: let,
            },
            Ident {
                sym: _,
            },
            Punct {
                char: '=',
                spacing: Alone,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos_dom,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: html,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: button,
                span: bytes(97..103),
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Ident {
                sym: let,
            },
            Ident {
                sym: _,
            },
            Punct {
                char: '=',
                spacing: Alone,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos_dom,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: html,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: button,
                span: bytes(169..175),
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Ident {
                sym: let,
            },
            Ident {
                sym: _,
            },
            Punct {
                char: '=',
                spacing: Alone,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos_dom,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: html,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: span,
                span: bytes(190..194),
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Ident {
                sym: let,
            },
            Ident {
                sym: _,
            },
            Punct {
                char: '=',
                spacing: Alone,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos_dom,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: html,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: span,
                span: bytes(218..222),
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Ident {
                sym: let,
            },
            Ident {
                sym: _,
            },
            Punct {
                char: '=',
                spacing: Alone,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos_dom,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: html,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: button,
                span: bytes(237..243),
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Ident {
                sym: let,
            },
            Ident {
                sym: _,
            },
            Punct {
                char: '=',
                spacing: Alone,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos_dom,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: html,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: button,
                span: bytes(309..315),
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Ident {
                sym: let,
            },
            Ident {
                sym: root,
            },
            Punct {
                char: '=',
                spacing: Alone,
            },
            Ident {
                sym: __TEMPLATE,
            },
            Punct {
                char: '.',
                spacing: Alone,
            },
            Ident {
                sym: with,
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: '|',
                        spacing: Alone,
                    },
                    Ident {
                        sym: tpl,
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                    },
                    Ident {
                        sym: tpl,
                    },
                    Punct {
                        char: '.',
                        spacing: Alone,
                    },
                    Ident {
                        sym: content,
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [],
                    },
                    Punct {
                        char: '.',
                        spacing: Alone,
                    },
                    Ident {
                        sym: clone_node_with_deep,
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Ident {
                                sym: true,
                            },
                        ],
                    },
                ],
            },
            Punct {
                char: '.',
                spacing: Alone,
            },
            Ident {
                sym: unwrap,
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [],
            },
            Punct {
                char: '.',
                spacing: Alone,
            },
            Ident {
                sym: first_child,
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [],
            },
            Punct {
                char: '.',
                spacing: Alone,
            },
            Ident {
                sym: unwrap,
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [],
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Ident {
                sym: let,
                span: bytes(10..15),
            },
            Ident {
                sym: _el1,
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(10..15),
            },
            Literal {
                lit: "div",
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(10..15),
            },
            Ident {
                sym: let,
                span: bytes(10..15),
            },
            Ident {
                sym: _el1,
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(10..15),
            },
            Punct {
                char: ':',
                spacing: Joint,
                span: bytes(10..15),
            },
            Punct {
                char: ':',
                spacing: Alone,
                span: bytes(10..15),
            },
            Ident {
                sym: leptos,
                span: bytes(10..15),
            },
            Punct {
                char: ':',
                spacing: Joint,
                span: bytes(10..15),
            },
            Punct {
                char: ':',
                spacing: Alone,
                span: bytes(10..15),
            },
            Ident {
                sym: wasm_bindgen,
                span: bytes(10..15),
            },
            Punct {
                char: ':',
                spacing: Joint,
                span: bytes(10..15),
            },
            Punct {
                char: ':',
                spacing: Alone,
                span: bytes(10..15),
            },
            Ident {
                sym: JsCast,
                span: bytes(10..15),
            },
            Punct {
                char: ':',
                spacing: Joint,
                span: bytes(10..15),
            },
            Punct {
                char: ':',
                spacing: Alone,
                span: bytes(10..15),
            },
            Ident {
                sym: unchecked_into,
                span: bytes(10..15),
            },
            Punct {
                char: ':',
                spacing: Joint,
                span: bytes(10..15),
            },
            Punct {
                char: ':',
                spacing: Alone,
                span: bytes(10..15),
            },
            Punct {
                char: '<',
                spacing: Alone,
                span: bytes(10..15),
            },
            Ident {
                sym: leptos,
                span: bytes(10..15),
            },
            Punct {
                char: ':',
                spacing: Joint,
                span: bytes(10..15),
            },
            Punct {
                char: ':',
                spacing: Alone,
                span: bytes(10..15),
            },
            Ident {
                sym: web_sys,
                span: bytes(10..15),
            },
            Punct {
                char: ':',
                spacing: Joint,
                span: bytes(10..15),
            },
            Punct {
                char: ':',
                spacing: Alone,
                span: bytes(10..15),
            },
            Ident {
                sym: Node,
                span: bytes(10..15),
            },
            Punct {
                char: '>',
                spacing: Alone,
                span: bytes(10..15),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Ident {
                        sym: root,
                    },
                    Punct {
                        char: '.',
                        spacing: Alone,
                        span: bytes(10..15),
                    },
                    Ident {
                        sym: clone,
                        span: bytes(10..15),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [],
                        span: bytes(10..15),
                    },
                ],
                span: bytes(10..15),
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(10..15),
            },
            Ident {
                sym: let,
                span: bytes(28..67),
            },
            Ident {
                sym: _el2,
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(28..67),
            },
            Literal {
                lit: "button",
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(28..67),
            },
            Ident {
                sym: let,
                span: bytes(28..67),
            },
            Ident {
                sym: _el2,
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(28..67),
            },
            Ident {
                sym: _el1,
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(28..67),
            },
            Ident {
                sym: first_child,
                span: bytes(28..67),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [],
                span: bytes(28..67),
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(28..67),
            },
            Ident {
                sym: unwrap_or_else,
                span: bytes(28..67),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: '|',
                        spacing: Joint,
                        span: bytes(28..67),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(28..67),
                    },
                    Ident {
                        sym: panic,
                        span: bytes(28..67),
                    },
                    Punct {
                        char: '!',
                        spacing: Alone,
                        span: bytes(28..67),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Literal {
                                lit: "error: {} => {}",
                                span: bytes(28..67),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(28..67),
                            },
                            Literal {
                                lit: "button",
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(28..67),
                            },
                            Literal {
                                lit: "firstChild",
                                span: bytes(28..67),
                            },
                        ],
                        span: bytes(28..67),
                    },
                ],
                span: bytes(28..67),
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(28..67),
            },
            Ident {
                sym: let,
                span: bytes(67..74),
            },
            Ident {
                sym: _el3,
                span: bytes(67..74),
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(67..74),
            },
            Ident {
                sym: _el2,
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(67..74),
            },
            Ident {
                sym: first_child,
                span: bytes(67..74),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [],
                span: bytes(67..74),
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(67..74),
            },
            Ident {
                sym: unwrap_or_else,
                span: bytes(67..74),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: '|',
                        spacing: Joint,
                        span: bytes(67..74),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(67..74),
                    },
                    Ident {
                        sym: panic,
                        span: bytes(67..74),
                    },
                    Punct {
                        char: '!',
                        spacing: Alone,
                        span: bytes(67..74),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Literal {
                                lit: "error : {} => {} ",
                                span: bytes(67..74),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(67..74),
                            },
                            Literal {
                                lit: "{block}",
                                span: bytes(67..74),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(67..74),
                            },
                            Literal {
                                lit: "firstChild",
                                span: bytes(67..74),
                            },
                        ],
                        span: bytes(67..74),
                    },
                ],
                span: bytes(67..74),
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(67..74),
            },
            Ident {
                sym: let,
                span: bytes(96..163),
            },
            Ident {
                sym: _el4,
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(96..163),
            },
            Literal {
                lit: "button",
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(96..163),
            },
            Ident {
                sym: let,
                span: bytes(96..163),
            },
            Ident {
                sym: _el4,
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(96..163),
            },
            Ident {
                sym: _el2,
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(96..163),
            },
            Ident {
                sym: next_sibling,
                span: bytes(96..163),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [],
                span: bytes(96..163),
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(96..163),
            },
            Ident {
                sym: unwrap_or_else,
                span: bytes(96..163),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: '|',
                        spacing: Joint,
                        span: bytes(96..163),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(96..163),
                    },
                    Ident {
                        sym: panic,
                        span: bytes(96..163),
                    },
                    Punct {
                        char: '!',
                        spacing: Alone,
                        span: bytes(96..163),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Literal {
                                lit: "error : {} => {} ",
                                span: bytes(96..163),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(96..163),
                            },
                            Literal {
                                lit: "button",
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(96..163),
                            },
                            Literal {
                                lit: "nextSibling",
                                span: bytes(96..163),
                            },
                        ],
                        span: bytes(96..163),
                    },
                ],
                span: bytes(96..163),
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(96..163),
            },
            Ident {
                sym: let,
                span: bytes(163..167),
            },
            Ident {
                sym: _el5,
                span: bytes(163..167),
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(163..167),
            },
            Ident {
                sym: _el4,
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(163..167),
            },
            Ident {
                sym: first_child,
                span: bytes(163..167),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [],
                span: bytes(163..167),
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(163..167),
            },
            Ident {
                sym: unwrap_or_else,
                span: bytes(163..167),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: '|',
                        spacing: Joint,
                        span: bytes(163..167),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(163..167),
                    },
                    Ident {
                        sym: panic,
                        span: bytes(163..167),
                    },
                    Punct {
                        char: '!',
                        spacing: Alone,
                        span: bytes(163..167),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Literal {
                                lit: "error : {} => {} ",
                                span: bytes(163..167),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(163..167),
                            },
                            Literal {
                                lit: "{block}",
                                span: bytes(163..167),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(163..167),
                            },
                            Literal {
                                lit: "firstChild",
                                span: bytes(163..167),
                            },
                        ],
                        span: bytes(163..167),
                    },
                ],
                span: bytes(163..167),
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(163..167),
            },
            Ident {
                sym: let,
                span: bytes(189..195),
            },
            Ident {
                sym: _el6,
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(189..195),
            },
            Literal {
                lit: "span",
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(189..195),
            },
            Ident {
                sym: let,
                span: bytes(189..195),
            },
            Ident {
                sym: _el6,
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(189..195),
            },
            Ident {
                sym: _el4,
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(189..195),
            },
            Ident {
                sym: next_sibling,
                span: bytes(189..195),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [],
                span: bytes(189..195),
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(189..195),
            },
            Ident {
                sym: unwrap_or_else,
                span: bytes(189..195),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: '|',
                        spacing: Joint,
                        span: bytes(189..195),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(189..195),
                    },
                    Ident {
                        sym: panic,
                        span: bytes(189..195),
                    },
                    Punct {
                        char: '!',
                        spacing: Alone,
                        span: bytes(189..195),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Literal {
                                lit: "error : {} => {} ",
                                span: bytes(189..195),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(189..195),
                            },
                            Literal {
                                lit: "span",
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(189..195),
                            },
                            Literal {
                                lit: "nextSibling",
                                span: bytes(189..195),
                            },
                        ],
                        span: bytes(189..195),
                    },
                ],
                span: bytes(189..195),
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(189..195),
            },
            Ident {
                sym: let,
                span: bytes(195..204),
            },
            Ident {
                sym: _el7,
                span: bytes(195..204),
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(195..204),
            },
            Ident {
                sym: _el6,
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(195..204),
            },
            Ident {
                sym: first_child,
                span: bytes(195..204),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [],
                span: bytes(195..204),
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(195..204),
            },
            Ident {
                sym: unwrap_or_else,
                span: bytes(195..204),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: '|',
                        spacing: Joint,
                        span: bytes(195..204),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(195..204),
                    },
                    Ident {
                        sym: panic,
                        span: bytes(195..204),
                    },
                    Punct {
                        char: '!',
                        spacing: Alone,
                        span: bytes(195..204),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Literal {
                                lit: "error : {} => {} ",
                                span: bytes(195..204),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(195..204),
                            },
                            Literal {
                                lit: "{block}",
                                span: bytes(195..204),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(195..204),
                            },
                            Literal {
                                lit: "firstChild",
                                span: bytes(195..204),
                            },
                        ],
                        span: bytes(195..204),
                    },
                ],
                span: bytes(195..204),
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(195..204),
            },
            Ident {
                sym: let,
                span: bytes(205..212),
            },
            Ident {
                sym: _el8,
                span: bytes(205..212),
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(205..212),
            },
            Ident {
                sym: _el7,
                span: bytes(195..204),
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(205..212),
            },
            Ident {
                sym: next_sibling,
                span: bytes(205..212),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [],
                span: bytes(205..212),
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(205..212),
            },
            Ident {
                sym: unwrap_or_else,
                span: bytes(205..212),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: '|',
                        spacing: Joint,
                        span: bytes(205..212),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(205..212),
                    },
                    Ident {
                        sym: panic,
                        span: bytes(205..212),
                    },
                    Punct {
                        char: '!',
                        spacing: Alone,
                        span: bytes(205..212),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Literal {
                                lit: "error : {} => {} ",
                                span: bytes(205..212),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(205..212),
                            },
                            Literal {
                                lit: "{block}",
                                span: bytes(205..212),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(205..212),
                            },
                            Literal {
                                lit: "nextSibling",
                                span: bytes(205..212),
                            },
                        ],
                        span: bytes(205..212),
                    },
                ],
                span: bytes(205..212),
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(205..212),
            },
            Ident {
                sym: let,
                span: bytes(213..216),
            },
            Ident {
                sym: _el9,
                span: bytes(213..216),
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(213..216),
            },
            Ident {
                sym: _el8,
                span: bytes(205..212),
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(213..216),
            },
            Ident {
                sym: next_sibling,
                span: bytes(213..216),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [],
                span: bytes(213..216),
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(213..216),
            },
            Ident {
                sym: unwrap_or_else,
                span: bytes(213..216),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: '|',
                        spacing: Joint,
                        span: bytes(213..216),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(213..216),
                    },
                    Ident {
                        sym: panic,
                        span: bytes(213..216),
                    },
                    Punct {
                        char: '!',
                        spacing: Alone,
                        span: bytes(213..216),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Literal {
                                lit: "error : {} => {} ",
                                span: bytes(213..216),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(213..216),
                            },
                            Literal {
                                lit: "{block}",
                                span: bytes(213..216),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(213..216),
                            },
                            Literal {
                                lit: "nextSibling",
                                span: bytes(213..216),
                            },
                        ],
                        span: bytes(213..216),
                    },
                ],
                span: bytes(213..216),
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(213..216),
            },
            Ident {
                sym: let,
                span: bytes(236..303),
            },
            Ident {
                sym: _el10,
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(236..303),
            },
            Literal {
                lit: "button",
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(236..303),
            },
            Ident {
                sym: let,
                span: bytes(236..303),
            },
            Ident {
                sym: _el10,
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(236..303),
            },
            Ident {
                sym: _el6,
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(236..303),
            },
            Ident {
                sym: next_sibling,
                span: bytes(236..303),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [],
                span: bytes(236..303),
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(236..303),
            },
            Ident {
                sym: unwrap_or_else,
                span: bytes(236..303),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: '|',
                        spacing: Joint,
                        span: bytes(236..303),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(236..303),
                    },
                    Ident {
                        sym: panic,
                        span: bytes(236..303),
                    },
                    Punct {
                        char: '!',
                        spacing: Alone,
                        span: bytes(236..303),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Literal {
                                lit: "error : {} => {} ",
                                span: bytes(236..303),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(236..303),
                            },
                            Literal {
                                lit: "button",
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(236..303),
                            },
                            Literal {
                                lit: "nextSibling",
                                span: bytes(236..303),
                            },
                        ],
                        span: bytes(236..303),
                    },
                ],
                span: bytes(236..303),
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(236..303),
            },
            Ident {
                sym: let,
                span: bytes(303..307),
            },
            Ident {
                sym: _el11,
                span: bytes(303..307),
            },
            Punct {
                char: '=',
                spacing: Alone,
                span: bytes(303..307),
            },
            Ident {
                sym: _el10,
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(303..307),
            },
            Ident {
                sym: first_child,
                span: bytes(303..307),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [],
                span: bytes(303..307),
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(303..307),
            },
            Ident {
                sym: unwrap_or_else,
                span: bytes(303..307),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: '|',
                        spacing: Joint,
                        span: bytes(303..307),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(303..307),
                    },
                    Ident {
                        sym: panic,
                        span: bytes(303..307),
                    },
                    Punct {
                        char: '!',
                        spacing: Alone,
                        span: bytes(303..307),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Literal {
                                lit: "error : {} => {} ",
                                span: bytes(303..307),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(303..307),
                            },
                            Literal {
                                lit: "{block}",
                                span: bytes(303..307),
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                                span: bytes(303..307),
                            },
                            Literal {
                                lit: "firstChild",
                                span: bytes(303..307),
                            },
                        ],
                        span: bytes(303..307),
                    },
                ],
                span: bytes(303..307),
            },
            Punct {
                char: ';',
                spacing: Alone,
                span: bytes(303..307),
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos_dom,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: add_event_helper,
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: leptos,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: wasm_bindgen,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: JsCast,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: unchecked_ref,
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Punct {
                                char: '&',
                                spacing: Alone,
                            },
                            Ident {
                                sym: _el2,
                            },
                        ],
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: leptos,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: leptos_dom,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: ev,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: click,
                        span: bytes(337..342),
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Ident {
                        sym: move,
                        span: bytes(45..49),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(50..51),
                    },
                    Ident {
                        sym: _,
                        span: bytes(51..52),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(52..53),
                    },
                    Ident {
                        sym: set_value,
                        span: bytes(54..63),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Literal {
                                lit: 0,
                                span: bytes(64..65),
                            },
                        ],
                        span: bytes(63..66),
                    },
                ],
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos_dom,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: add_event_helper,
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: leptos,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: wasm_bindgen,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: JsCast,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: unchecked_ref,
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Punct {
                                char: '&',
                                spacing: Alone,
                            },
                            Ident {
                                sym: _el4,
                            },
                        ],
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: leptos,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: leptos_dom,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: ev,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: click,
                        span: bytes(417..422),
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Ident {
                        sym: move,
                        span: bytes(113..117),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(118..119),
                    },
                    Ident {
                        sym: _,
                        span: bytes(119..120),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(120..121),
                    },
                    Ident {
                        sym: set_value,
                        span: bytes(122..131),
                    },
                    Punct {
                        char: '.',
                        spacing: Alone,
                        span: bytes(131..132),
                    },
                    Ident {
                        sym: update,
                        span: bytes(132..138),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Punct {
                                char: '|',
                                spacing: Alone,
                                span: bytes(139..140),
                            },
                            Ident {
                                sym: value,
                                span: bytes(140..145),
                            },
                            Punct {
                                char: '|',
                                spacing: Alone,
                                span: bytes(145..146),
                            },
                            Punct {
                                char: '*',
                                spacing: Alone,
                                span: bytes(147..148),
                            },
                            Ident {
                                sym: value,
                                span: bytes(148..153),
                            },
                            Punct {
                                char: '-',
                                spacing: Joint,
                                span: bytes(154..155),
                            },
                            Punct {
                                char: '=',
                                spacing: Alone,
                                span: bytes(155..156),
                            },
                            Ident {
                                sym: step,
                                span: bytes(157..161),
                            },
                        ],
                        span: bytes(138..162),
                    },
                ],
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos_dom,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: mount_child,
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: leptos,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: leptos_dom,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: MountKind,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: Before,
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Punct {
                                char: '&',
                                spacing: Alone,
                            },
                            Ident {
                                sym: _el8,
                                span: bytes(213..216),
                            },
                            Punct {
                                char: '.',
                                spacing: Alone,
                            },
                            Ident {
                                sym: clone,
                            },
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [],
                            },
                        ],
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Punct {
                        char: '&',
                        spacing: Alone,
                    },
                    Group {
                        delimiter: Brace,
                        stream: TokenStream [
                            Group {
                                delimiter: Brace,
                                stream: TokenStream [
                                    Ident {
                                        sym: value,
                                        span: bytes(206..211),
                                    },
                                ],
                                span: bytes(205..212),
                            },
                        ],
                    },
                    Punct {
                        char: '.',
                        spacing: Alone,
                    },
                    Ident {
                        sym: into_view,
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [],
                    },
                ],
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos_dom,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: add_event_helper,
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: leptos,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: wasm_bindgen,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: JsCast,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: unchecked_ref,
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Punct {
                                char: '&',
                                spacing: Alone,
                            },
                            Ident {
                                sym: _el10,
                            },
                        ],
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: leptos,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: leptos_dom,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: ev,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: click,
                        span: bytes(665..670),
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Ident {
                        sym: move,
                        span: bytes(253..257),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(258..259),
                    },
                    Ident {
                        sym: _,
                        span: bytes(259..260),
                    },
                    Punct {
                        char: '|',
                        spacing: Alone,
                        span: bytes(260..261),
                    },
                    Ident {
                        sym: set_value,
                        span: bytes(262..271),
                    },
                    Punct {
                        char: '.',
                        spacing: Alone,
                        span: bytes(271..272),
                    },
                    Ident {
                        sym: update,
                        span: bytes(272..278),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Punct {
                                char: '|',
                                spacing: Alone,
                                span: bytes(279..280),
                            },
                            Ident {
                                sym: value,
                                span: bytes(280..285),
                            },
                            Punct {
                                char: '|',
                                spacing: Alone,
                                span: bytes(285..286),
                            },
                            Punct {
                                char: '*',
                                spacing: Alone,
                                span: bytes(287..288),
                            },
                            Ident {
                                sym: value,
                                span: bytes(288..293),
                            },
                            Punct {
                                char: '+',
                                spacing: Joint,
                                span: bytes(294..295),
                            },
                            Punct {
                                char: '=',
                                spacing: Alone,
                                span: bytes(295..296),
                            },
                            Ident {
                                sym: step,
                                span: bytes(297..301),
                            },
                        ],
                        span: bytes(278..302),
                    },
                ],
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Punct {
                char: ';',
                spacing: Alone,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: leptos_dom,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: View,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: Element,
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Ident {
                        sym: leptos,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: leptos_dom,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: Element,
                    },
                    Group {
                        delimiter: Brace,
                        stream: TokenStream [
                            Punct {
                                char: '#',
                                spacing: Alone,
                            },
                            Group {
                                delimiter: Bracket,
                                stream: TokenStream [
                                    Ident {
                                        sym: cfg,
                                    },
                                    Group {
                                        delimiter: Parenthesis,
                                        stream: TokenStream [
                                            Ident {
                                                sym: debug_assertions,
                                            },
                                        ],
                                    },
                                ],
                            },
                            Ident {
                                sym: name,
                            },
                            Punct {
                                char: ':',
                                spacing: Alone,
                            },
                            Literal {
                                lit: "div",
                            },
                            Punct {
                                char: '.',
                                spacing: Alone,
                            },
                            Ident {
                                sym: into,
                            },
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [],
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                            },
                            Ident {
                                sym: element,
                            },
                            Punct {
                                char: ':',
                                spacing: Alone,
                            },
                            Punct {
                                char: ':',
                                spacing: Joint,
                            },
                            Punct {
                                char: ':',
                                spacing: Alone,
                            },
                            Ident {
                                sym: leptos,
                            },
                            Punct {
                                char: ':',
                                spacing: Joint,
                            },
                            Punct {
                                char: ':',
                                spacing: Alone,
                            },
                            Ident {
                                sym: wasm_bindgen,
                            },
                            Punct {
                                char: ':',
                                spacing: Joint,
                            },
                            Punct {
                                char: ':',
                                spacing: Alone,
                            },
                            Ident {
                                sym: JsCast,
                            },
                            Punct {
                                char: ':',
                                spacing: Joint,
                            },
                            Punct {
                                char: ':',
                                spacing: Alone,
                            },
                            Ident {
                                sym: unchecked_into,
                            },
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Ident {
                                        sym: root,
                                    },
                                ],
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                            },
                            Punct {
                                char: '#',
                                spacing: Alone,
                            },
                            Group {
                                delimiter: Bracket,
                                stream: TokenStream [
                                    Ident {
                                        sym: cfg,
                                    },
                                    Group {
                                        delimiter: Parenthesis,
                                        stream: TokenStream [
                                            Ident {
                                                sym: debug_assertions,
                                            },
                                        ],
                                    },
                                ],
                            },
                            Ident {
                                sym: view_marker,
                            },
                            Punct {
                                char: ':',
                                spacing: Alone,
                            },
                            Ident {
                                sym: None,
                            },
                        ],
                    },
                ],
            },
        ],
    },
]
