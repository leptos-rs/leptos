---
source: leptos_macro/src/view/tests.rs
expression: result
---
TokenStream [
    Punct {
        char: ':',
        spacing: Joint,
        span: bytes(10..82),
    },
    Punct {
        char: ':',
        spacing: Alone,
        span: bytes(10..82),
    },
    Ident {
        sym: leptos,
        span: bytes(10..82),
    },
    Punct {
        char: ':',
        spacing: Joint,
        span: bytes(10..82),
    },
    Punct {
        char: ':',
        spacing: Alone,
        span: bytes(10..82),
    },
    Ident {
        sym: component_view,
        span: bytes(10..82),
    },
    Group {
        delimiter: Parenthesis,
        stream: TokenStream [
            Punct {
                char: '#',
                spacing: Alone,
                span: bytes(10..82),
            },
            Group {
                delimiter: Bracket,
                stream: TokenStream [
                    Ident {
                        sym: allow,
                        span: bytes(10..82),
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Ident {
                                sym: clippy,
                                span: bytes(10..82),
                            },
                            Punct {
                                char: ':',
                                spacing: Joint,
                                span: bytes(10..82),
                            },
                            Punct {
                                char: ':',
                                spacing: Alone,
                                span: bytes(10..82),
                            },
                            Ident {
                                sym: needless_borrows_for_generic_args,
                                span: bytes(10..82),
                            },
                        ],
                        span: bytes(10..82),
                    },
                ],
                span: bytes(10..82),
            },
            Punct {
                char: '&',
                spacing: Alone,
                span: bytes(11..24),
            },
            Ident {
                sym: SimpleCounter,
                span: bytes(11..24),
            },
            Punct {
                char: ',',
                spacing: Alone,
                span: bytes(10..82),
            },
            Punct {
                char: ':',
                spacing: Joint,
                span: bytes(11..24),
            },
            Punct {
                char: ':',
                spacing: Alone,
                span: bytes(11..24),
            },
            Ident {
                sym: leptos,
                span: bytes(11..24),
            },
            Punct {
                char: ':',
                spacing: Joint,
                span: bytes(11..24),
            },
            Punct {
                char: ':',
                spacing: Alone,
                span: bytes(11..24),
            },
            Ident {
                sym: component_props_builder,
                span: bytes(11..24),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: '&',
                        spacing: Alone,
                        span: bytes(11..24),
                    },
                    Ident {
                        sym: SimpleCounter,
                        span: bytes(11..24),
                    },
                ],
                span: bytes(11..24),
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(37..52),
            },
            Ident {
                sym: initial_value,
                span: bytes(37..50),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: '#',
                        spacing: Alone,
                        span: bytes(51..52),
                    },
                    Group {
                        delimiter: Bracket,
                        stream: TokenStream [
                            Ident {
                                sym: allow,
                                span: bytes(51..52),
                            },
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Ident {
                                        sym: unused_braces,
                                        span: bytes(51..52),
                                    },
                                ],
                                span: bytes(51..52),
                            },
                        ],
                        span: bytes(51..52),
                    },
                    Group {
                        delimiter: Brace,
                        stream: TokenStream [
                            Literal {
                                lit: 0,
                                span: bytes(51..52),
                            },
                        ],
                        span: bytes(51..52),
                    },
                ],
                span: bytes(37..52),
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(65..71),
            },
            Ident {
                sym: step,
                span: bytes(65..69),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Punct {
                        char: '#',
                        spacing: Alone,
                        span: bytes(70..71),
                    },
                    Group {
                        delimiter: Bracket,
                        stream: TokenStream [
                            Ident {
                                sym: allow,
                                span: bytes(70..71),
                            },
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Ident {
                                        sym: unused_braces,
                                        span: bytes(70..71),
                                    },
                                ],
                                span: bytes(70..71),
                            },
                        ],
                        span: bytes(70..71),
                    },
                    Group {
                        delimiter: Brace,
                        stream: TokenStream [
                            Literal {
                                lit: 1,
                                span: bytes(70..71),
                            },
                        ],
                        span: bytes(70..71),
                    },
                ],
                span: bytes(65..71),
            },
            Punct {
                char: '.',
                spacing: Alone,
                span: bytes(11..24),
            },
            Ident {
                sym: build,
                span: bytes(11..24),
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [],
                span: bytes(11..24),
            },
        ],
        span: bytes(10..82),
    },
]
