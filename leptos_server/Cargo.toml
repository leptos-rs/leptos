[package]
name = "leptos_server"
version = { workspace = true }
authors = ["Greg Johnston"]
license = "MIT"
repository = "https://github.com/leptos-rs/leptos"
description = "RPC for the Leptos web framework."
readme = "../README.md"
rust-version.workspace = true
edition.workspace = true

[dependencies]
base64 = "0.22.1"
codee = { version = "0.3.0", features = ["json_serde"] }
hydration_context = { workspace = true }
reactive_graph = { workspace = true, features = ["hydration"] }
server_fn = { workspace = true }
tracing = { version = "0.1.41", optional = true }
futures = "0.3.31"

any_spawner = { workspace = true }
or_poisoned = { workspace = true }
tachys = { workspace = true, optional = true, features = ["reactive_graph"] }
send_wrapper = "0.6"

# serialization formats
serde = { version = "1.0" }
js-sys = { version = "0.3.74", optional = true }
wasm-bindgen = { version = "0.2.97", optional = true }
serde_json = { version = "1.0" }

[features]
ssr = []
hydration = []
miniserde = ["codee/miniserde"]
rkyv = ["codee/rkyv"]
serde-wasm-bindgen = ["codee/json_serde_wasm"]
serde-lite = ["codee/serde_lite"]
tachys = ["dep:tachys"]
tracing = ["dep:tracing"]

[package.metadata.cargo-all-features]
denylist = ["tracing"]

[package.metadata.docs.rs]
rustdoc-args = ["--generate-link-to-definition"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(leptos_debuginfo)'] }